name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

# Limit permissions of GITHUB_TOKEN
permissions:
  contents: read

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    env:
      # Ensure imports can resolve package under src/
      PYTHONPATH: src

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

      - name: Run tests with pytest
        run: |
          pytest tests/ -v --tb=short --junitxml=test-results-${{ matrix.python-version }}.xml
        continue-on-error: false

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.python-version }}
          path: test-results-${{ matrix.python-version }}.xml

  lint:
    name: Lint with flake8
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics > flake8-report.txt

      - name: Upload flake8 report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: flake8-report
          path: flake8-report.txt
